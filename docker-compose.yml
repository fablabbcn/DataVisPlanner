version: '2.0'

services:

  # Meteor
  # Data visualizations
  meteor:
    build:
      context: ./meteor/app
      dockerfile: Dockerfile-meteor
    volumes:
      - .:/meteor/app/
    depends_on:
      - mongo
      - webserver
    links:
      - mongo
    ports:
      - 3000:3000
    environment:
      - "MONGO_URL=mongodb://mongo:27017/meteor"

  # Mongo
  # Shared db between data visualizations and analyses
  mongo:
    image: mongo:latest
    volumes:
      - mongo:/data
    ports:
      - '27017:27017'
      
  # Cloud9
  # For editing Airflow DAGs
  cloud9:
    image: 'agungf/cloud9-ide'
    environment:
      - ROOT_PASS=thesecrets
      - C9_WORKSPACE=/usr/local/airflow/dags
    depends_on:
      - webserver
    volumes_from:
      - webserver
    ports:
      - 8181:8181
      - 22
      
  # Portainer
  # For managing containers
  portainer:
    image: portainer/portainer
    ports:
        - 9000:9000
    command: -v /var/run/docker.sock:/var/run/docker.sock portainer/portainer
      
  # Airflow
  # Data analyses
  # Copied and modified from the submodule airflow
  redis:
    image: 'redis:3.2.7'

  postgres:
    build:
      context: ./airflow
      dockerfile: Dockerfile-postgres
    depends_on:
      - webserver

  webserver:
    build:
      context: ./airflow
      dockerfile: Dockerfile-airflow
    depends_on:
        - redis
        - mongo
    restart: always
    env_file:
        - ./airflow/environment.env
    environment:
        - EXECUTOR=Celery
    volumes:
        - ./airflow/dags:/usr/local/airflow/dags
    ports:
        - 8080:8080
    command: webserver

  flower:
    build:
      context: ./airflow
      dockerfile: Dockerfile-airflow
    restart: always
    depends_on:
        - redis
    environment:
        - EXECUTOR=Celery
    ports:
        - 5555:5555
    command: flower

  scheduler:
    build:
      context: ./airflow
      dockerfile: Dockerfile-airflow
    restart: always
    depends_on:
        - webserver
    volumes:
        - ./airflow/dags:/usr/local/airflow/dags
    env_file:
        - ./airflow/environment.env
    environment:
        - EXECUTOR=Celery
    command: scheduler

  worker:
    build:
      context: ./airflow
      dockerfile: Dockerfile-airflow
    restart: always
    depends_on:
        - scheduler
    volumes:
        - ./airflow/dags:/usr/local/airflow/dags
    env_file:
        - ./airflow/environment.env
    environment:
        - EXECUTOR=Celery
    command: worker

volumes:
  mongo:
  postgres:
  redis:
